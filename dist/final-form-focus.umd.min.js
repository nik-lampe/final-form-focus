!(function(t, n) {
  'object' == typeof exports && 'undefined' != typeof module
    ? n(exports)
    : 'function' == typeof define && define.amd
      ? define(['exports'], n)
      : n((t['final-form-focus'] = {}))
})(this, function(t) {
  'use strict'
  var n =
      'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
        ? function(t) {
            return typeof t
          }
        : function(t) {
            return t &&
              'function' == typeof Symbol &&
              t.constructor === Symbol &&
              t !== Symbol.prototype
              ? 'symbol'
              : typeof t
          },
    r = function(t, r) {
      var e = (function(t) {
          if (null === t || void 0 === t) return []
          if ('string' != typeof t) throw new Error('toPath() expects a string')
          return t.length ? t.split(/[.[\]]+/).filter(Boolean) : []
        })(r),
        o = t,
        u = !0,
        i = !1,
        f = void 0
      try {
        for (
          var c, l = e[Symbol.iterator]();
          !(u = (c = l.next()).done);
          u = !0
        ) {
          var s = c.value
          if (
            void 0 === o ||
            null === o ||
            'object' !== (void 0 === o ? 'undefined' : n(o)) ||
            (Array.isArray(o) && isNaN(s))
          )
            return
          o = o[s]
        }
      } catch (t) {
        ;(i = !0), (f = t)
      } finally {
        try {
          !u && l.return && l.return()
        } finally {
          if (i) throw f
        }
      }
      return o
    },
    e = function(t) {
      return !(!t || 'function' != typeof t.focus)
    },
    o = function() {
      return 'undefined' == typeof document
        ? []
        : Array.prototype.slice.call(document.forms).reduce(function(t, n) {
            return t.concat(Array.prototype.slice.call(n).filter(e))
          }, [])
    },
    u = function(t, n) {
      return t.find(function(t) {
        return t.name && r(n, t.name)
      })
    }
  ;(t.default = function(t, n) {
    return function(r) {
      var e = function(r) {
          t || (t = o), n || (n = u)
          var e = n(t(), r)
          e && e.focus()
        },
        i = r.submit,
        f = {},
        c = r.subscribe(
          function(t) {
            f = t
          },
          { errors: !0, submitErrors: !0 }
        ),
        l = function() {
          var t = f,
            n = t.errors,
            r = t.submitErrors
          n && Object.keys(n).length ? e(n) : r && Object.keys(r).length && e(r)
        }
      return (
        (r.submit = function() {
          var t = i.call(r)
          return t && 'function' == typeof t.then ? t.then(l) : l(), t
        }),
        function() {
          c(), (r.submit = i)
        }
      )
    }
  }),
    (t.getFormInputs = function(t) {
      return function() {
        if ('undefined' == typeof document) return []
        var n = document.forms[t]
        return n && n.length ? Array.prototype.slice.call(n).filter(e) : []
      }
    }),
    Object.defineProperty(t, '__esModule', { value: !0 })
})
//# sourceMappingURL=final-form-focus.umd.min.js.map
